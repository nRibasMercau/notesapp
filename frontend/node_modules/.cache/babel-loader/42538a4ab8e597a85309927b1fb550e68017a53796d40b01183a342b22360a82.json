{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Dev/web/fullstackopen/part2/notesapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const hook = () => {\n    axios.get('http://localhost:3001/notes').then(response => {\n      setNotes(response.data);\n    });\n  };\n  useEffect(hook, []);\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n    //setNotes(notes.concat(noteObject))\n    //setNewNote('')\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  const toggleImportanceOf = id => {\n    console.log(`importance of ${id} needs to be toggled`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","get","then","response","data","addNote","event","preventDefault","noteObject","content","important","Math","random","post","concat","handleNoteChange","target","value","notesToShow","filter","note","toggleImportanceOf","id","console","log","map"],"sources":["/home/nicolas/Dev/web/fullstackopen/part2/notesapp/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const hook = () => {\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        setNotes(response.data)\n      })\n  }\n  \n  useEffect(hook, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote, \n      important: Math.random() < 0.5\n    }\n\n    axios\n      .post('http://localhost:3001/notes', noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n    //setNotes(notes.concat(noteObject))\n    //setNewNote('')\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n\n  const toggleImportanceOf = (id) => {\n    console.log(`importance of ${id} needs to be toggled`)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type='submit'>save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AAAA;AAEpC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,IAAI,GAAG,MAAM;IACjBV,KAAK,CACFW,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAI;MAChBR,QAAQ,CAACQ,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAEDf,SAAS,CAACW,IAAI,EAAE,EAAE,CAAC;EAEnB,MAAMK,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAEb,OAAO;MAChBc,SAAS,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAG;IAC7B,CAAC;IAEDtB,KAAK,CACFuB,IAAI,CAAC,6BAA6B,EAAEL,UAAU,CAAC,CAC/CN,IAAI,CAACC,QAAQ,IAAI;MAChBR,QAAQ,CAACD,KAAK,CAACoB,MAAM,CAACX,QAAQ,CAACC,IAAI,CAAC,CAAC;MACrCP,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;IACJ;IACA;EACF,CAAC;;EAED,MAAMkB,gBAAgB,GAAIT,KAAK,IAAK;IAClCT,UAAU,CAACS,KAAK,CAACU,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAGpB,OAAO,GAAGJ,KAAK,GAAGA,KAAK,CAACyB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,SAAS,KAAK,IAAI,CAAC;EAGnF,MAAMW,kBAAkB,GAAIC,EAAE,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAE,iBAAgBF,EAAG,sBAAqB,CAAC;EACxD,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA,uBACE;QAAQ,OAAO,EAAE,MAAMvB,UAAU,CAAC,CAACD,OAAO,CAAE;QAAA,WAAC,OACtC,EAACA,OAAO,GAAG,WAAW,GAAG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IAC5B;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAA,UACGoB,WAAW,CAACO,GAAG,CAACL,IAAI,iBACnB,QAAC,IAAI;QAEH,IAAI,EAAEA,IAAK;QACX,gBAAgB,EAAE,MAAMC,kBAAkB,CAACD,IAAI,CAACE,EAAE;MAAE,GAF/CF,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAGZ;IACH;MAAA;MAAA;MAAA;IAAA,QACE,eACL;MAAM,QAAQ,EAAEjB,OAAQ;MAAA,wBACtB;QAAO,KAAK,EAAET,OAAQ;QAAC,QAAQ,EAAEmB;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpD;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GAlEKvB,GAAG;AAAA,KAAHA,GAAG;AAoET,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}